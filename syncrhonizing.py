from element_types import ParseToken

synchronizing_table = {
    ParseToken.ADDITIVE_EXPRESSION: {ParseToken.BRACKET_CLOSE,
                                     ParseToken.COMMA,
                                     ParseToken.SEMICOLON,
                                     ParseToken.PARENTHESIS_CLOSE},
    ParseToken.ADDITIVE_EXPRESSION_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                                           ParseToken.COMMA,
                                           ParseToken.SEMICOLON,
                                           ParseToken.LESS,
                                           ParseToken.EQUALS,
                                           ParseToken.BRACKET_CLOSE},
    ParseToken.ADDITIVE_EXPRESSION_ZEGOND: {ParseToken.PARENTHESIS_CLOSE,
                                            ParseToken.COMMA,
                                            ParseToken.SEMICOLON,
                                            ParseToken.LESS,
                                            ParseToken.EQUALS,
                                            ParseToken.BRACKET_CLOSE},
    ParseToken.ADDOP: {ParseToken.PARENTHESIS_OPEN,
                       ParseToken.ID,
                       ParseToken.NUM},
    ParseToken.ARG_LIST: {ParseToken.PARENTHESIS_CLOSE},
    ParseToken.ARG_LIST_PRIME: {ParseToken.PARENTHESIS_CLOSE},
    ParseToken.ARGS: {ParseToken.PARENTHESIS_CLOSE},
    ParseToken.B: {ParseToken.PARENTHESIS_CLOSE,
                   ParseToken.COMMA,
                   ParseToken.SEMICOLON,
                   ParseToken.BRACKET_CLOSE},
    ParseToken.C: {ParseToken.PARENTHESIS_CLOSE,
                   ParseToken.COMMA,
                   ParseToken.SEMICOLON,
                   ParseToken.BRACKET_CLOSE},
    ParseToken.COMPOUND_STMT: {ParseToken.DOLLAR,
                               ParseToken.PARENTHESIS_OPEN,
                               ParseToken.SEMICOLON,
                               ParseToken.ID,
                               ParseToken.NUM,
                               ParseToken.BREAK,
                               ParseToken.ELSE,
                               ParseToken.ENDIF,
                               ParseToken.IF,
                               ParseToken.INT,
                               ParseToken.REPEAT,
                               ParseToken.RETURN,
                               ParseToken.UNTIL,
                               ParseToken.VOID,
                               ParseToken.BRACE_OPEN,
                               ParseToken.BRACE_CLOSE},
    ParseToken.D: {ParseToken.PARENTHESIS_CLOSE,
                   ParseToken.COMMA,
                   ParseToken.SEMICOLON,
                   ParseToken.LESS,
                   ParseToken.EQUALS,
                   ParseToken.BRACKET_CLOSE},
    ParseToken.DECLARATION: {ParseToken.DOLLAR,
                             ParseToken.PARENTHESIS_OPEN,
                             ParseToken.SEMICOLON,
                             ParseToken.ID,
                             ParseToken.NUM,
                             ParseToken.BREAK,
                             ParseToken.IF,
                             ParseToken.INT,
                             ParseToken.REPEAT,
                             ParseToken.RETURN,
                             ParseToken.VOID,
                             ParseToken.BRACE_OPEN,
                             ParseToken.BRACE_CLOSE},
    ParseToken.DECLARATION_INITIAL: {ParseToken.PARENTHESIS_OPEN,
                                     ParseToken.PARENTHESIS_CLOSE,
                                     ParseToken.COMMA,
                                     ParseToken.SEMICOLON,
                                     ParseToken.BRACKET_OPEN},
    ParseToken.DECLARATION_LIST: {ParseToken.DOLLAR,
                                  ParseToken.PARENTHESIS_OPEN,
                                  ParseToken.SEMICOLON,
                                  ParseToken.ID,
                                  ParseToken.NUM,
                                  ParseToken.BREAK,
                                  ParseToken.IF,
                                  ParseToken.REPEAT,
                                  ParseToken.RETURN,
                                  ParseToken.BRACE_OPEN,
                                  ParseToken.BRACE_CLOSE},
    ParseToken.DECLARATION_PRIME: {ParseToken.DOLLAR,
                                   ParseToken.PARENTHESIS_OPEN,
                                   ParseToken.SEMICOLON,
                                   ParseToken.ID,
                                   ParseToken.NUM,
                                   ParseToken.BREAK,
                                   ParseToken.IF,
                                   ParseToken.INT,
                                   ParseToken.REPEAT,
                                   ParseToken.RETURN,
                                   ParseToken.VOID,
                                   ParseToken.BRACE_OPEN,
                                   ParseToken.BRACE_CLOSE},
    ParseToken.ELSE_STMT: {ParseToken.PARENTHESIS_OPEN,
                           ParseToken.SEMICOLON,
                           ParseToken.ID,
                           ParseToken.NUM,
                           ParseToken.BREAK,
                           ParseToken.ELSE,
                           ParseToken.ENDIF,
                           ParseToken.IF,
                           ParseToken.REPEAT,
                           ParseToken.RETURN,
                           ParseToken.UNTIL,
                           ParseToken.BRACE_OPEN,
                           ParseToken.BRACE_CLOSE},
    ParseToken.EXPRESSION: {ParseToken.PARENTHESIS_CLOSE,
                            ParseToken.COMMA,
                            ParseToken.SEMICOLON,
                            ParseToken.BRACKET_CLOSE},
    ParseToken.EXPRESSION_STMT: {ParseToken.PARENTHESIS_OPEN,
                                 ParseToken.SEMICOLON,
                                 ParseToken.ID,
                                 ParseToken.NUM,
                                 ParseToken.BREAK,
                                 ParseToken.ELSE,
                                 ParseToken.ENDIF,
                                 ParseToken.IF,
                                 ParseToken.REPEAT,
                                 ParseToken.RETURN,
                                 ParseToken.UNTIL,
                                 ParseToken.BRACE_OPEN,
                                 ParseToken.BRACE_CLOSE},
    ParseToken.FACTOR: {ParseToken.PARENTHESIS_CLOSE,
                        ParseToken.ASTERISK,
                        ParseToken.PLUS,
                        ParseToken.COMMA,
                        ParseToken.MINUS,
                        ParseToken.SEMICOLON,
                        ParseToken.LESS,
                        ParseToken.EQUALS,
                        ParseToken.BRACKET_CLOSE},
    ParseToken.FACTOR_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                              ParseToken.ASTERISK,
                              ParseToken.PLUS,
                              ParseToken.COMMA,
                              ParseToken.MINUS,
                              ParseToken.SEMICOLON,
                              ParseToken.LESS,
                              ParseToken.EQUALS,
                              ParseToken.BRACKET_CLOSE},
    ParseToken.FACTOR_ZEGOND: {ParseToken.PARENTHESIS_CLOSE,
                               ParseToken.ASTERISK,
                               ParseToken.PLUS,
                               ParseToken.COMMA,
                               ParseToken.MINUS,
                               ParseToken.SEMICOLON,
                               ParseToken.LESS,
                               ParseToken.EQUALS,
                               ParseToken.BRACKET_CLOSE},
    ParseToken.FUN_DECLARATION_PRIME: {ParseToken.DOLLAR,
                                       ParseToken.PARENTHESIS_OPEN,
                                       ParseToken.SEMICOLON,
                                       ParseToken.ID,
                                       ParseToken.NUM,
                                       ParseToken.BREAK,
                                       ParseToken.IF,
                                       ParseToken.INT,
                                       ParseToken.REPEAT,
                                       ParseToken.RETURN,
                                       ParseToken.VOID,
                                       ParseToken.BRACE_OPEN,
                                       ParseToken.BRACE_CLOSE},
    ParseToken.G: {ParseToken.PARENTHESIS_CLOSE,
                   ParseToken.PLUS,
                   ParseToken.COMMA,
                   ParseToken.MINUS,
                   ParseToken.SEMICOLON,
                   ParseToken.LESS,
                   ParseToken.EQUALS,
                   ParseToken.BRACKET_CLOSE},
    ParseToken.H: {ParseToken.PARENTHESIS_CLOSE,
                   ParseToken.COMMA,
                   ParseToken.SEMICOLON,
                   ParseToken.BRACKET_CLOSE},
    ParseToken.ITERATION_STMT: {ParseToken.PARENTHESIS_OPEN,
                                ParseToken.SEMICOLON,
                                ParseToken.ID,
                                ParseToken.NUM,
                                ParseToken.BREAK,
                                ParseToken.ELSE,
                                ParseToken.ENDIF,
                                ParseToken.IF,
                                ParseToken.REPEAT,
                                ParseToken.RETURN,
                                ParseToken.UNTIL,
                                ParseToken.BRACE_OPEN,
                                ParseToken.BRACE_CLOSE},
    ParseToken.PARAM: {ParseToken.PARENTHESIS_CLOSE,
                       ParseToken.COMMA},
    ParseToken.PARAM_LIST: {ParseToken.PARENTHESIS_CLOSE},
    ParseToken.PARAM_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                             ParseToken.COMMA},
    ParseToken.PARAMS: {ParseToken.PARENTHESIS_CLOSE},
    ParseToken.PROGRAM: {ParseToken.ASTERISK},
    ParseToken.RELOP: {ParseToken.PARENTHESIS_OPEN,
                       ParseToken.ID,
                       ParseToken.NUM},
    ParseToken.RETURN_STMT: {ParseToken.PARENTHESIS_OPEN,
                             ParseToken.SEMICOLON,
                             ParseToken.ID,
                             ParseToken.NUM,
                             ParseToken.BREAK,
                             ParseToken.ELSE,
                             ParseToken.ENDIF,
                             ParseToken.IF,
                             ParseToken.REPEAT,
                             ParseToken.RETURN,
                             ParseToken.UNTIL,
                             ParseToken.BRACE_OPEN,
                             ParseToken.BRACE_CLOSE},
    ParseToken.RETURN_STMT_PRIME: {ParseToken.PARENTHESIS_OPEN,
                                   ParseToken.SEMICOLON,
                                   ParseToken.ID,
                                   ParseToken.NUM,
                                   ParseToken.BREAK,
                                   ParseToken.ELSE,
                                   ParseToken.ENDIF,
                                   ParseToken.IF,
                                   ParseToken.REPEAT,
                                   ParseToken.RETURN,
                                   ParseToken.UNTIL,
                                   ParseToken.BRACE_OPEN,
                                   ParseToken.BRACE_CLOSE},
    ParseToken.SELECTION_STMT: {ParseToken.PARENTHESIS_OPEN,
                                ParseToken.SEMICOLON,
                                ParseToken.ID,
                                ParseToken.NUM,
                                ParseToken.BREAK,
                                ParseToken.ELSE,
                                ParseToken.ENDIF,
                                ParseToken.IF,
                                ParseToken.REPEAT,
                                ParseToken.RETURN,
                                ParseToken.UNTIL,
                                ParseToken.BRACE_OPEN,
                                ParseToken.BRACE_CLOSE},
    ParseToken.SIMPLE_EXPRESSION_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                                         ParseToken.COMMA,
                                         ParseToken.SEMICOLON,
                                         ParseToken.BRACKET_CLOSE},
    ParseToken.SIMPLE_EXPRESSION_ZEGOND: {ParseToken.PARENTHESIS_CLOSE,
                                          ParseToken.COMMA,
                                          ParseToken.SEMICOLON,
                                          ParseToken.BRACKET_CLOSE},
    ParseToken.STATEMENT: {ParseToken.PARENTHESIS_OPEN,
                           ParseToken.SEMICOLON,
                           ParseToken.ID,
                           ParseToken.NUM,
                           ParseToken.BREAK,
                           ParseToken.ELSE,
                           ParseToken.ENDIF,
                           ParseToken.IF,
                           ParseToken.REPEAT,
                           ParseToken.RETURN,
                           ParseToken.UNTIL,
                           ParseToken.BRACE_OPEN,
                           ParseToken.BRACE_CLOSE},
    ParseToken.STATEMENT_LIST: {ParseToken.BRACKET_CLOSE},
    ParseToken.TERM: {ParseToken.PARENTHESIS_OPEN,
                      ParseToken.SEMICOLON,
                      ParseToken.ID,
                      ParseToken.NUM,
                      ParseToken.BREAK,
                      ParseToken.ELSE,
                      ParseToken.ENDIF,
                      ParseToken.IF,
                      ParseToken.REPEAT,
                      ParseToken.RETURN,
                      ParseToken.UNTIL,
                      ParseToken.BRACE_OPEN,
                      ParseToken.BRACE_CLOSE},
    ParseToken.TERM_PRIME: {ParseToken.PARENTHESIS_OPEN,
                            ParseToken.SEMICOLON,
                            ParseToken.ID,
                            ParseToken.NUM,
                            ParseToken.BREAK,
                            ParseToken.ELSE,
                            ParseToken.ENDIF,
                            ParseToken.IF,
                            ParseToken.REPEAT,
                            ParseToken.RETURN,
                            ParseToken.UNTIL,
                            ParseToken.BRACE_OPEN,
                            ParseToken.BRACE_CLOSE},
    ParseToken.TERM_ZEGOND: {ParseToken.PARENTHESIS_OPEN,
                             ParseToken.SEMICOLON,
                             ParseToken.ID,
                             ParseToken.NUM,
                             ParseToken.BREAK,
                             ParseToken.ELSE,
                             ParseToken.ENDIF,
                             ParseToken.IF,
                             ParseToken.REPEAT,
                             ParseToken.RETURN,
                             ParseToken.UNTIL,
                             ParseToken.BRACE_OPEN,
                             ParseToken.BRACE_CLOSE},
    ParseToken.TYPE_SPECIFIER: {ParseToken.ID},
    ParseToken.VAR_CALL_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                                ParseToken.ASTERISK,
                                ParseToken.PLUS,
                                ParseToken.COMMA,
                                ParseToken.MINUS,
                                ParseToken.SEMICOLON,
                                ParseToken.LESS,
                                ParseToken.EQUALS,
                                ParseToken.BRACKET_CLOSE},
    ParseToken.VAR_DECLARATION_PRIME: {ParseToken.DOLLAR,
                                       ParseToken.PARENTHESIS_OPEN,
                                       ParseToken.SEMICOLON,
                                       ParseToken.ID,
                                       ParseToken.NUM,
                                       ParseToken.BREAK,
                                       ParseToken.IF,
                                       ParseToken.INT,
                                       ParseToken.REPEAT,
                                       ParseToken.RETURN,
                                       ParseToken.VOID,
                                       ParseToken.BRACE_OPEN,
                                       ParseToken.BRACE_CLOSE},
    ParseToken.VAR_PRIME: {ParseToken.PARENTHESIS_CLOSE,
                           ParseToken.ASTERISK,
                           ParseToken.PLUS,
                           ParseToken.COMMA,
                           ParseToken.MINUS,
                           ParseToken.SEMICOLON,
                           ParseToken.LESS,
                           ParseToken.EQUALS,
                           ParseToken.BRACKET_CLOSE},
}
